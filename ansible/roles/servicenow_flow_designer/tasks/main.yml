---
# ServiceNow Flow Designer Implementation Tasks
# This file orchestrates the deployment of all Flow Designer workflows

- name: Display Flow Designer Implementation Banner
  debug:
    msg:
      - "ðŸš€ ServiceNow Flow Designer Implementation"
      - "=========================================="
      - "Deploying automated workflows for:"
      - "  âœ“ User Provisioning (Keycloak integration)"
      - "  âœ“ Project Management (OpenShift projects)"
      - "  âœ“ Monitoring Integration (Alert handling)"
      - ""

- name: Test ServiceNow Flow Designer API Access
  uri:
    url: "{{ servicenow_instance_url }}/api/now/table/sys_hub_flow?sysparm_limit=1"
    method: GET
    user: "{{ servicenow_admin_user }}"
    password: "{{ servicenow_admin_password }}"
    force_basic_auth: yes
    headers:
      Accept: "application/json"
    validate_certs: false
  register: flow_api_test
  failed_when: false

- name: Verify Flow Designer API Access
  fail:
    msg: "Cannot access ServiceNow Flow Designer API. Status: {{ flow_api_test.status }}"
  when: flow_api_test.status != 200

- name: Deploy User Provisioning Flow
  include_tasks: user_provisioning_flow.yml
  when: enable_user_provisioning | bool

- name: Deploy Project Management Flow
  include_tasks: project_management_flow.yml
  when: enable_project_management | bool

- name: Deploy Monitoring Integration Flow
  include_tasks: monitoring_integration_flow.yml
  when: enable_monitoring_integration | bool

- name: Create OpenShift Project Request Catalog Item
  uri:
    url: "{{ servicenow_instance_url }}/api/now/table/sc_cat_item"
    method: POST
    user: "{{ servicenow_admin_user }}"
    password: "{{ servicenow_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    body_format: json
    body:
      name: "OpenShift Project Request"
      short_description: "Request a new OpenShift project with automated setup"
      description: "This catalog item allows users to request new OpenShift projects with automated provisioning, role binding, and resource quotas."
      category: "Software"
      active: true
      workflow: "{{ project_management_flow_name }}"
    status_code: [201, 400]
    validate_certs: false
  register: catalog_item_result
  failed_when: false

- name: Create User Account Request Catalog Item
  uri:
    url: "{{ servicenow_instance_url }}/api/now/table/sc_cat_item"
    method: POST
    user: "{{ servicenow_admin_user }}"
    password: "{{ servicenow_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    body_format: json
    body:
      name: "Keycloak User Account Request"
      short_description: "Request a new Keycloak user account"
      description: "This catalog item allows managers to request new Keycloak user accounts for team members with automated provisioning."
      category: "Software"
      active: true
      workflow: "{{ user_provisioning_flow_name }}"
    status_code: [201, 400]
    validate_certs: false
  register: user_catalog_item_result
  failed_when: false

- name: Flow Designer Implementation Summary
  debug:
    msg:
      - "ðŸŽ¯ Flow Designer Implementation Complete"
      - "========================================"
      - "âœ… User Provisioning Flow: {{ 'Deployed' if enable_user_provisioning else 'Skipped' }}"
      - "âœ… Project Management Flow: {{ 'Deployed' if enable_project_management else 'Skipped' }}"
      - "âœ… Monitoring Integration Flow: {{ 'Deployed' if enable_monitoring_integration else 'Skipped' }}"
      - "âœ… OpenShift Project Catalog Item: {{ 'Success' if catalog_item_result.status == 201 else 'Skipped or Failed' }}"
      - "âœ… User Account Catalog Item: {{ 'Success' if user_catalog_item_result.status == 201 else 'Skipped or Failed' }}"
      - ""
      - "ðŸš€ Ready for Production Use:"
      - "  â€¢ ServiceNow Service Catalog: {{ servicenow_instance_url }}/nav_to.do?uri=catalog_home.do"
      - "  â€¢ Flow Designer: {{ servicenow_instance_url }}/nav_to.do?uri=flow_designer.do"
      - "  â€¢ OpenShift Console: https://console-openshift-console.{{ openshift_apps_domain }}"
      - ""
      - "ðŸ“‹ Next Steps:"
      - "  1. Test catalog items in ServiceNow"
      - "  2. Configure Alertmanager webhook: {{ servicenow_instance_url }}/api/now/webhook/openshift_alerts"
      - "  3. Verify end-to-end workflows"
