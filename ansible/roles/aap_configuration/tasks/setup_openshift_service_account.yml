---
# ansible/roles/aap_configuration/tasks/setup_openshift_service_account.yml
# Enhanced OpenShift Service Account Management for AAP Integration

- name: Check if ServiceNow AAP service account exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: servicenow-aap-sa
    namespace: default
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
  register: existing_service_account
  ignore_errors: true

- name: Create ServiceNow AAP service account
  kubernetes.core.k8s:
    state: present
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: servicenow-aap-sa
        namespace: default
        annotations:
          description: "Service account for ServiceNow-AAP integration"
          created-by: "servicenow-ocp-service"
  when: existing_service_account.resources | length == 0

- name: Create cluster role binding for ServiceNow AAP service account
  kubernetes.core.k8s:
    state: present
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: servicenow-aap-cluster-admin
        annotations:
          description: "Cluster admin access for ServiceNow-AAP integration"
          created-by: "servicenow-ocp-service"
      subjects:
      - kind: ServiceAccount
        name: servicenow-aap-sa
        namespace: default
      roleRef:
        kind: ClusterRole
        name: cluster-admin
        apiGroup: rbac.authorization.k8s.io
  when: existing_service_account.resources | length == 0

- name: Create long-lived token secret for service account (OpenShift 4.11+)
  kubernetes.core.k8s:
    state: present
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: servicenow-aap-sa-token
        namespace: default
        annotations:
          kubernetes.io/service-account.name: servicenow-aap-sa
          description: "Long-lived token for ServiceNow-AAP integration"
          created-by: "servicenow-ocp-service"
      type: kubernetes.io/service-account-token
  when: existing_service_account.resources | length == 0

- name: Wait for token to be generated (with retries)
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: servicenow-aap-sa-token
    namespace: default
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
  register: service_account_token_secret
  until: service_account_token_secret.resources | length > 0 and service_account_token_secret.resources[0].data.token is defined
  retries: 12
  delay: 5
  when: existing_service_account.resources | length == 0

- name: Get service account token from existing secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: servicenow-aap-sa-token
    namespace: default
    host: "{{ openshift_api_url }}"
    api_key: "{{ vault_openshift_token }}"
    validate_certs: false
  register: service_account_token_secret
  when: existing_service_account.resources | length > 0

- name: Extract and decode service account token (from secret)
  set_fact:
    service_account_token: "{{ service_account_token_secret.resources[0].data.token | b64decode }}"
  when: service_account_token_secret.resources | length > 0 and service_account_token_secret.resources[0].data.token is defined

- name: Generate service account token using oc command (fallback)
  shell: |
    oc create token servicenow-aap-sa -n default --duration=8760h
  register: oc_token_result
  when: service_account_token is not defined
  ignore_errors: true

- name: Set service account token from oc command
  set_fact:
    service_account_token: "{{ oc_token_result.stdout.strip() }}"
  when: service_account_token is not defined and oc_token_result is succeeded

- name: Test service account token validity
  uri:
    url: "{{ openshift_api_url }}/api/v1/namespaces"
    method: GET
    headers:
      Authorization: "Bearer {{ service_account_token }}"
    validate_certs: false
    status_code: 200
  register: token_test
  when: service_account_token is defined

- name: Display service account setup results
  debug:
    msg: |
      üîß OpenShift Service Account Setup Results:
      
      ‚úÖ Service Account: servicenow-aap-sa
      ‚úÖ Namespace: default
      ‚úÖ Cluster Role: cluster-admin
      ‚úÖ Token Secret: servicenow-aap-sa-token
      ‚úÖ Token Valid: {{ token_test.status == 200 if token_test is defined else 'Not tested' }}
      
      üìã Service Account Details:
      - Name: servicenow-aap-sa
      - Namespace: default
      - Token Length: {{ service_account_token | length if service_account_token is defined else 'N/A' }} characters
      - Created: {{ 'New' if existing_service_account.resources | length == 0 else 'Existing' }}
      
      üí° This service account token does not expire and provides persistent authentication for AAP.

- name: Set bearer token fact for AAP credential creation
  set_fact:
    bearer_token: "{{ service_account_token }}"
  when: service_account_token is defined

- name: Fallback to vault token if service account setup failed
  set_fact:
    bearer_token: "{{ vault_openshift_token }}"
  when: service_account_token is not defined

- name: Display token source information
  debug:
    msg: |
      üîë Token Source for AAP Credential:
      
      {% if service_account_token is defined %}
      ‚úÖ Using Service Account Token (Recommended)
      - Source: servicenow-aap-sa service account
      - Expiration: Never (long-lived token)
      - Scope: cluster-admin
      {% else %}
      ‚ö†Ô∏è Using Vault Token (Fallback)
      - Source: vault_openshift_token
      - Expiration: User token (may expire)
      - Recommendation: Service account creation failed, check permissions
      {% endif %}
