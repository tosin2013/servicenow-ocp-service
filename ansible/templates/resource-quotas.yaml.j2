---
# Compute Resource Quota
apiVersion: v1
kind: ResourceQuota
metadata:
  name: "compute-quota"
  namespace: "{{ project_name }}"
  labels:
    servicenow-request: "{{ servicenow_request_number }}"
    managed-by: "servicenow-aap"
    quota-type: "compute"
spec:
  hard:
    # CPU and Memory limits based on environment
    {% if environment == 'production' %}
    requests.cpu: "{{ cpu_requests | default('8') }}"
    requests.memory: "{{ memory_requests | default('16Gi') }}"
    limits.cpu: "{{ cpu_limits | default('16') }}"
    limits.memory: "{{ memory_limits | default('32Gi') }}"
    {% elif environment == 'staging' %}
    requests.cpu: "{{ cpu_requests | default('4') }}"
    requests.memory: "{{ memory_requests | default('8Gi') }}"
    limits.cpu: "{{ cpu_limits | default('8') }}"
    limits.memory: "{{ memory_limits | default('16Gi') }}"
    {% else %}
    requests.cpu: "{{ cpu_requests | default('2') }}"
    requests.memory: "{{ memory_requests | default('4Gi') }}"
    limits.cpu: "{{ cpu_limits | default('4') }}"
    limits.memory: "{{ memory_limits | default('8Gi') }}"
    {% endif %}
    
    # Pod and storage limits
    pods: "{{ max_pods | default('10') }}"
    persistentvolumeclaims: "{{ max_pvcs | default('5') }}"
    requests.storage: "{{ storage_requests | default('50Gi') }}"
    
    # Object count limits
    services: "{{ max_services | default('10') }}"
    secrets: "{{ max_secrets | default('20') }}"
    configmaps: "{{ max_configmaps | default('20') }}"

---
# Storage Resource Quota (if storage class is specified)
{% if storage_class is defined %}
apiVersion: v1
kind: ResourceQuota
metadata:
  name: "storage-quota-{{ storage_class }}"
  namespace: "{{ project_name }}"
  labels:
    servicenow-request: "{{ servicenow_request_number }}"
    managed-by: "servicenow-aap"
    quota-type: "storage"
spec:
  hard:
    "{{ storage_class }}.storageclass.storage.k8s.io/requests.storage": "{{ storage_quota | default('100Gi') }}"
    "{{ storage_class }}.storageclass.storage.k8s.io/persistentvolumeclaims": "{{ max_pvcs | default('5') }}"
{% endif %}

---
# Limit Range for individual containers
apiVersion: v1
kind: LimitRange
metadata:
  name: "container-limits"
  namespace: "{{ project_name }}"
  labels:
    servicenow-request: "{{ servicenow_request_number }}"
    managed-by: "servicenow-aap"
spec:
  limits:
    - type: Container
      default:
        {% if environment == 'production' %}
        cpu: "2"
        memory: "4Gi"
        {% elif environment == 'staging' %}
        cpu: "1"
        memory: "2Gi"
        {% else %}
        cpu: "500m"
        memory: "1Gi"
        {% endif %}
      defaultRequest:
        {% if environment == 'production' %}
        cpu: "500m"
        memory: "1Gi"
        {% elif environment == 'staging' %}
        cpu: "250m"
        memory: "512Mi"
        {% else %}
        cpu: "100m"
        memory: "256Mi"
        {% endif %}
      max:
        {% if environment == 'production' %}
        cpu: "4"
        memory: "8Gi"
        {% elif environment == 'staging' %}
        cpu: "2"
        memory: "4Gi"
        {% else %}
        cpu: "1"
        memory: "2Gi"
        {% endif %}
