---
# Test OIDC Authentication Flow Playbook
- name: Test OIDC Integration
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - group_vars/all/vault.yml
    - openshift_oidc_vars.yml
  
  tasks:
    - name: Test Keycloak OIDC discovery endpoint
      uri:
        url: "{{ rhsso_url }}/auth/realms/{{ servicenow_realm_name }}/.well-known/openid_configuration"
        method: GET
        validate_certs: false
        status_code: [200]
      register: oidc_discovery_test
      failed_when: false

    - name: Parse OIDC discovery response
      set_fact:
        oidc_endpoints: "{{ oidc_discovery_test.json | default({}) }}"
      when: oidc_discovery_test.status == 200

    - name: Test OpenShift OAuth metadata endpoint
      uri:
        url: "{{ ocp_api_url }}/.well-known/oauth_authorization_server"
        method: GET
        headers:
          Authorization: "Bearer {{ vault_openshift_token }}"
        validate_certs: false
        status_code: [200]
      register: openshift_oauth_metadata
      failed_when: false

    - name: Test OpenShift login page for OIDC provider
      uri:
        url: "{{ ocp_console_url }}/auth/login"
        method: GET
        validate_certs: false
        status_code: [200]
      register: login_page_test
      failed_when: false

    - name: Create test user in Keycloak for OIDC testing
      uri:
        url: "{{ rhsso_url }}/auth/admin/realms/{{ servicenow_realm_name }}/users"
        method: POST
        user: "{{ keycloak_username }}"
        password: "{{ vault_keycloak_password }}"
        force_basic_auth: true
        validate_certs: false
        body_format: json
        body:
          username: "oidc-test-user"
          email: "oidc-test@example.com"
          firstName: "OIDC"
          lastName: "Test User"
          enabled: true
          emailVerified: true
          groups:
            - "/developers"
          credentials:
            - type: "password"
              value: "TestPassword123!"
              temporary: false
        status_code: [201, 409]  # 409 if user already exists
      register: test_user_creation
      failed_when: false

    - name: Verify OAuth configuration includes OIDC provider
      kubernetes.core.k8s_info:
        api_version: config.openshift.io/v1
        kind: OAuth
        name: cluster
        validate_certs: false
        host: "{{ ocp_api_url }}"
        api_key: "{{ vault_openshift_token }}"
      register: oauth_config

    - name: Check if OIDC provider is configured in OAuth
      set_fact:
        oidc_provider_in_oauth: "{{ oauth_config.resources[0].spec.identityProviders | default([]) | selectattr('name', 'equalto', 'keycloak-oidc') | list | length > 0 }}"

    - name: Generate OIDC integration test summary
      set_fact:
        oidc_test_summary:
          keycloak_discovery: "{{ 'Success' if oidc_discovery_test.status == 200 else 'Failed' }}"
          openshift_oauth_metadata: "{{ 'Success' if openshift_oauth_metadata.status == 200 else 'Failed' }}"
          openshift_login_page: "{{ 'Accessible' if login_page_test.status == 200 else 'Failed' }}"
          test_user_created: "{{ 'Success' if test_user_creation.status in [201, 409] else 'Failed' }}"
          oidc_provider_configured: "{{ 'Yes' if oidc_provider_in_oauth else 'No' }}"

    - name: Display OIDC integration test results
      debug:
        msg:
          - "ðŸ§ª OIDC Integration Test Results"
          - "==============================="
          - "Keycloak OIDC Discovery: {{ oidc_test_summary.keycloak_discovery }}"
          - "OpenShift OAuth Metadata: {{ oidc_test_summary.openshift_oauth_metadata }}"
          - "OpenShift Login Page: {{ oidc_test_summary.openshift_login_page }}"
          - "Test User Created: {{ oidc_test_summary.test_user_created }}"
          - "OIDC Provider Configured: {{ oidc_test_summary.oidc_provider_configured }}"
          - ""
          - "ðŸ”— Test URLs:"
          - "  Keycloak OIDC Discovery: {{ rhsso_url }}/auth/realms/{{ servicenow_realm_name }}/.well-known/openid_configuration"
          - "  OpenShift Console Login: {{ ocp_console_url }}/auth/login"
          - "  Test User: oidc-test-user / TestPassword123!"
          - ""
          - "ðŸ“‹ Manual Testing Steps:"
          - "  1. Navigate to {{ ocp_console_url }}"
          - "  2. Click on 'Keycloak SSO' login option"
          - "  3. Login with: oidc-test-user / TestPassword123!"
          - "  4. Verify user has 'edit' permissions (developers group)"
