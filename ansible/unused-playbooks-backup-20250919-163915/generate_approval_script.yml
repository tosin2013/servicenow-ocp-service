---
# Generate ServiceNow Workflow Approval Script from Jinja2 Template
- name: Generate ServiceNow Workflow Approval Script
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all/vault.yml
    - servicenow_integration_vars.yml

  vars:
    # ServiceNow Configuration
    servicenow_instance_url: "{{ servicenow_instance_url }}"
    servicenow_admin_user: "{{ servicenow_admin_user }}"
    vault_servicenow_admin_password: "{{ vault_servicenow_admin_password }}"
    
    # OpenShift Catalog Item IDs
    openshift_basic_catalog_id: "1a3b56b1470cfa50292cc82f316d4378"
    openshift_database_catalog_id: "aa3b1e75470cfa50292cc82f316d43e2"
    
    # Workflow Configuration
    target_workflow_state: "2"  # 2 = Work in Progress (corrected)
    enable_debug_logging: true
    
    # Output Configuration
    script_output_path: "../approve_workflow.sh"
    script_permissions: "0755"

  tasks:
    - name: Generate approval script from Jinja2 template
      template:
        src: "../templates/approve_workflow.sh.j2"
        dest: "{{ script_output_path }}"
        mode: "{{ script_permissions }}"
        backup: yes
      register: script_generation

    - name: Display script generation results
      debug:
        msg: |
          🎯 ServiceNow Workflow Approval Script Generated!
          
          ✅ Script Details:
          📁 Location: {{ script_output_path }}
          🔧 Permissions: {{ script_permissions }}
          📝 Backup Created: {{ script_generation.backup_file | default('No backup needed') }}
          
          🎯 Configuration Applied:
          🌐 ServiceNow URL: {{ servicenow_instance_url }}
          👤 ServiceNow User: {{ servicenow_admin_user }}
          🎯 Target State: {{ target_workflow_state }} (Work in Progress)
          🐛 Debug Logging: {{ enable_debug_logging }}
          
          📋 OpenShift Catalog Items:
          • Basic Project: {{ openshift_basic_catalog_id }}
          • Database Project: {{ openshift_database_catalog_id }}
          
          🚀 Usage:
          ./approve_workflow.sh REQ0010026
          
          ✅ Benefits of Jinja2 Template Approach:
          • 🔧 Easy configuration management
          • 📝 Version controlled templates
          • 🎯 Environment-specific customization
          • 🔄 Consistent script generation
          • 🐛 Configurable debug levels
          • 📋 Centralized catalog item management

    - name: Verify script is executable
      stat:
        path: "{{ script_output_path }}"
      register: script_stat

    - name: Display script verification
      debug:
        msg: |
          📋 Script Verification:
          ✅ File exists: {{ script_stat.stat.exists }}
          ✅ Executable: {{ script_stat.stat.executable }}
          📏 Size: {{ script_stat.stat.size }} bytes
          ⏰ Modified: {{ script_stat.stat.mtime | default('Unknown') }}
          
          🎯 Ready to use:
          ./approve_workflow.sh REQ0010026
