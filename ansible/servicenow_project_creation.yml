---
# ansible/servicenow_project_creation.yml

- name: Create OpenShift Project from ServiceNow Request
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # These variables would be passed in from the AAP Job Template,
    # which in turn gets them from the ServiceNow Flow Designer call.
    project_name: "example-project"
    display_name: "Example Project"
    description: "An example project created from a ServiceNow request."
    requestor: "example-user"
    servicenow_request_number: "REQ0000001"
    environment: "development"
    team: "example-team"

  tasks:
    - name: Handle environment variable conflict (Ansible reserved name)
      set_fact:
        project_environment: "{{ project_env | default(env_type) | default('development') }}"
      when: project_environment is not defined

    - name: Convert team string to team_members list for user creation
      set_fact:
        team_members: "{{ team.split(',') | map('trim') | list if team is defined and team != 'default' else [] }}"
      when: team_members is not defined and team is defined

    - name: Set OpenShift API authentication facts
      set_fact:
        openshift_auth:
          api_key: "{{ lookup('env', 'OPENSHIFT_API_TOKEN') | default(vault_openshift_token, true) }}"
      no_log: true

    - name: Fail if OpenShift API token is not available
      fail:
        msg: "OpenShift API token is not available. Set OPENSHIFT_API_TOKEN environment variable or ensure vault_openshift_token is defined."
      when: openshift_auth.api_key is not defined or openshift_auth.api_key == ""

    - name: Create OpenShift Project (Namespace)
      kubernetes.core.k8s:
        state: present
        host: "https://api.cluster-lgkp4.lgkp4.sandbox1321.opentlc.com:6443"
        api_key: "{{ openshift_auth.api_key }}"
        validate_certs: false
        definition: "{{ lookup('template', 'namespace.yaml.j2') | from_yaml }}"

    - name: Apply RBAC Permissions
      kubernetes.core.k8s:
        state: present
        host: "https://api.cluster-lgkp4.lgkp4.sandbox1321.opentlc.com:6443"
        api_key: "{{ openshift_auth.api_key }}"
        validate_certs: false
        definition: "{{ item }}"
      loop: "{{ lookup('template', 'rbac-permissions.yaml.j2') | from_yaml_all | list }}"

    - name: Apply Resource Quotas and Limits
      kubernetes.core.k8s:
        state: present
        host: "https://api.cluster-lgkp4.lgkp4.sandbox1321.opentlc.com:6443"
        api_key: "{{ openshift_auth.api_key }}"
        validate_certs: false
        definition: "{{ item }}"
      loop: "{{ lookup('template', 'resource-quotas.yaml.j2') | from_yaml_all | list }}"

    - name: Apply Network Policies
      kubernetes.core.k8s:
        state: present
        host: "https://api.cluster-lgkp4.lgkp4.sandbox1321.opentlc.com:6443"
        api_key: "{{ openshift_auth.api_key }}"
        validate_certs: false
        definition: "{{ item }}"
      loop: "{{ lookup('template', 'network-policies.yaml.j2') | from_yaml_all | list }}"

    # Keycloak User Management using shared role
    - name: Create Keycloak users in ServiceNow realm
      include_role:
        name: keycloak_user_management
      vars:
        requestor: "{{ requestor }}"
        team_members: "{{ team_members | default([]) }}"
        servicenow_realm: "{{ servicenow_realm | default('servicenow') }}"
        keycloak_url: "{{ keycloak_url | default(rhsso_url) }}"
        keycloak_admin_username: "{{ keycloak_admin_username | default('admin') }}"
        keycloak_admin_password: "{{ keycloak_admin_password | default(vault_keycloak_password) }}"
        temp_password: "{{ temp_password | default('TempPass123!') }}"
        default_email_domain: "{{ default_email_domain | default('example.com') }}"
        project_name: "{{ project_name }}"
        servicenow_request_number: "{{ servicenow_request_number }}"
      when: manage_keycloak_users | default(false)
